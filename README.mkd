ATTACHEVENTS
============

Attach events, easily.


DESCRIPTION
-----------

   attachEvents(behaviors);

   'behaviors' is an object/hash/associative array that relates event types,
   specific keystrokes, and/or CSS-style element selectors to the actions they
   should trigger.


EXAMPLE
-------

    attachEvents({

        // Attach actions to events by type.
        'click': function(event) { 
            console.log("click received by something on the document.")
        },

        // A single character index attaches actions to specific keypresses
        'o': function(event) {
            console.log("The 'o' key has been pressed.")
        },

       // Use CSS selectors to attach actions to specific elements
       '#target': {

            'focus': function() { 
                console.log("The element with id 'target' has received focus.");

            // May as well use arrow functions for one-liners..
            'o': (event) => event.target.innerHTML = "The 'o' key has been received by this element."

            }
       },

       // CSS selectors also work for ALL matching elements.
       'h1': {

           'click': (event) =>
                event.target.innerHTML = "text appended onclick for this particular <h1> element, though they all have their own copy of this event."

       });


TODO
----
* support nested element selectors.
* dynamic event detection? (instead of checking a hardcoded array of event names).
* Improve demo with clear examples of each specific feature.
